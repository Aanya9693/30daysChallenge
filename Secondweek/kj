 If taking the offer is not beneficial, memoize the result without taking the offer         dp[key] = notTakeOffer;         return notTakeOffer;     }  public:     int shoppingOffers(vector<int>& price, vector<vector<int>>& offer, vector<int>& need) {         map<pair<int, vector<int>>, int> dp;         vector<int> discount(need.size(), 0);         return dfs(0, discount, price, offer, need, dp);     } };
