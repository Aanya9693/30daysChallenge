//2 for loop will not work because of i%j==0 and i%k==0 then j%k==0 and vice versa
//should also be divisible 

class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums){
        int n=nums.size();
        sort(nums.begin(), nums.end());

        vector<int>ans;
        vector<int>dp(n, 1);
        vector<int>prev(n, -1);
        int maxSize=1, maxIndex=0;

        for(int i=1; i<n; i++){
            for(int j=i-1; j>=0; j--){
                if(nums[i]%nums[j]==0 && dp[i]<dp[j]+1){
                    dp[i]=dp[j]+1;
                    prev[i]=j;

                    if(dp[i]>maxSize){
                        maxSize=dp[i];
                        maxIndex=i;
                    }
                }
            }
        }
        while(maxIndex != -1){
            ans.push_back(nums[maxIndex]);
            maxIndex=prev[maxIndex];
        }
        return ans;
    }
};
